# Tig default configuration
#
# Please see 'man tigrc' for a complete reference.

# Settings
# --------
# Most of these settings can be toggleable, either via the toggle-*
# actions or via the option menu (bound to `o` by default).

# View settings
#
# Supported column types and their options:
#
#   author
#    - display (enum) [no|full|abbreviated|email|email-user]
#                   : Show author information?
#    - width (int)          : Fixed width when nonzero
#    - maxwidth (int)           : Autosize limit
#
#   commit-title
#    - display (bool)           : Show the commit title?
#    - graph (enum) [no|v2|v1]      : Show the commit graph? (main view only)
#    - refs (bool)          : Show branches, tags and remotes? (main view only)
#    - overflow (boolint)       : Highlight overflows? Defaults to 50 when enabled.
#
#   date
#    - display (enum) [no|default|relative|relative-compact|custom]
#                   : Show dates?
#    - local (bool)         : Show local dates?
#    - format (string)          : Custom strftime(3) format
#                     Note: %Z is formatted as %z
#    - width (int)          : Fixed width when nonzero
#
#   file-name
#    - display (enum) [no|always|auto]  : Show file names?
#    - width (int)          : Fixed width when nonzero
#    - maxwidth (int)           : Autosize limit
#
#   file-size
#    - display (enum) [no|default|units]
#                   : Show file sizes?
#    - width (int)          : Fixed width when nonzero
#
#   id
#    - display (bool)           : Show commit/tree ID?
#    - width (int)          : Fixed width when nonzero
#
#   line-number
#    - display (bool)           : Show line numbers?
#    - interval (int)           : Interval between line numbers; defaults to 5
#    - width (int)          : Fixed width when nonzero
#
#   mode
#    - display (bool)           : Show file modes?
#    - width (int)          : Fixed width when nonzero
#
#   ref
#    - display (bool)           : Show ref names?
#    - width (int)          : Fixed width when nonzero
#    - maxwidth (int)           : Autosize limit
#
#   status
#    - display (enum) [no|short|long]   : Show status label?
#
#   text
#    - display (bool)           : Show text?
#    - commit-title-overflow (boolint)  : Highlight overflow in log and diff view?
#

set blame-view  = id:yes,color file-name:auto author:full date:default line-number:yes,interval=1 text
set grep-view   = file-name:no line-number:yes,interval=1 text
set main-view   = line-number:no,interval=5 id:yes date:relative-compact author:full commit-title:yes,graph:v2,refs,overflow=no
set refs-view   = line-number:no id:no date:default author:full ref commit-title
set stash-view  = line-number:no,interval=5 id:no date:default author:full commit-title
set status-view = line-number:no,interval=5 status:short file-name
set tree-view   = line-number:no,interval=5 mode author:full file-size date:default id:no file-name

# Pager based views
set pager-view = line-number:no,interval=5 text
set stage-view = line-number:no,interval=5 text
set log-view   = line-number:no,interval=5 text
set blob-view  = line-number:no,interval=5 text
set diff-view  = line-number:no,interval=5 text:yes,commit-title-overflow=no

# UI display settings
set show-changes                = yes     # show changes commits in the main view?
set status-show-untracked-files = yes     # show untracked changes in status
set status-show-untracked-dirs  = yes     # show untracked changes in status
set wrap-lines                  = no      # wrap long lines in pager views?
set tab-size                    = 4       # number of spaces to use when expanding tabs
set line-graphics               = utf-8   # enum: ascii, default, utf-8
set truncation-delimiter        = ~       # character drawn for truncations, or "utf-8"

# Format reference names based on type.
# - head:           The current HEAD.
# - tag:            A signed tag.
# - local-tag:      An unsigned tag.
# - remote:         A remote.
# - tracked-remote: The remote tracked by current HEAD.
# - replace:        A replaced reference.
# - branch:         Any other reference.
# If no format is defined for `local-tag` then the one for `tag` is used.
# Similarly, `remote` is used if no `tracked-remote` format exists.
# Prefix with `hide:` to not show that reference type, e.g. `hide:remote`.
# Expects a space-separated list of format strings.
set reference-format = [branch] <tag> {remote} ~replace~

# Settings controlling how content is read from Git
set commit-order                = auto          # enum: auto, default, topo, date, reverse (main)
set status-show-untracked-dirs  = yes           # show files in untracked directories? (status)
set status-show-untracked-files = yes           # show untracked files?
set ignore-space                = no            # enum: no, all, some, at-eol (diff)
set show-notes                  = yes           # when non-bool passed as `--show-notes=...` (diff)
set diff-context                = 3             # number of lines to show around diff changes (diff)
set diff-options                = -C            # user-defined options for `tig show` (git-diff)
set diff-highlight              = true          # string (or bool): path to diff-highlight script, defaults to `diff-highlight`
set blame-options               = -C -C -C      # user-defined options for `tig blame` (git-blame)
set log-options                 = --pretty=raw  # user-defined options for `tig log` (git-log)
set main-options                = -n 1000 --all # user-defined options for `tig` (git-log)
set mailmap                     = yes           # use .mailmap to show canonical name and email address

# Misc
set refresh-mode       = auto # enum: manual, auto, after-command, periodic
set refresh-interval   = 1    # interval in seconds between refreshes
set ignore-case        = no   # enum: no, yes, smart-case
set wrap-search        = yes  # wrap around to top/bottom of view when searching
set focus-child        = yes  # move focus to child view when opened?
set send-child-enter   = yes  # propagate "enter" keypresses to child views?
set horizontal-scroll  = 50%  # number of columns to scroll as % of width
set split-view-height  = 67%  # height of the bottom view for horizontal splits
set vertical-split     = auto # enum: horizontal, vertical, auto; use auto to
set split-view-width   = 50%  # width of right-most view for vertical splits
set editor-line-number = yes  # automatically pass line number to editor? used
set history-size       = 500  # size of persistent history, 0 to disable
set mouse              = yes  # enable mouse support?
set mouse-scroll       = 3    # number of lines to scroll via the mouse
set mouse-wheel-cursor = yes  # prefer moving the cursor to scrolling the view?

# User-defined commands
# ---------------------
# These commands allow to run shell commands directly from within Tig.
# Unless otherwise specified, commands are run in the foreground with
# their console output shown (as if '!' was specified). When multiple
# command options are specified their behavior are combined, e.g. "?<git
# commit" will prompt the user whether to execute the command and will
# exit Tig after completion.
#
#   !   Run the command in the foreground with output shown.
#   @   Run the command in the background with no output.
#   ?   Prompt the user before executing the command.
#   +   Run the command synchronously, and echo the first line of output to the status bar.
#   <   Exit Tig after executing the command.
#   >   Re-open Tig instantly in the last displayed view after executing the command.
#
# User-defined commands can optionally refer to Tig's internal state
# using the following variable names, which are substituted before
# commands are run:
#
#   %(head)     The current ref ID. Defaults to HEAD
#   %(commit)       The current commit ID.
#   %(blob)     The current blob ID.
#   %(branch)       The current branch name.
#   %(remote)       The current remote name.
#   %(tag)      The current tag name.
#   %(stash)        The current stash name.
#   %(directory)    The current directory path in the tree view;
#           empty for the root directory.
#   %(file)     The currently selected file.
#   %(ref)      The reference given to blame or HEAD if undefined.
#   %(revargs)      The revision arguments passed on the command line.
#   %(fileargs)     The file arguments passed on the command line.
#   %(cmdlineargs)  All other options passed on the command line.
#   %(diffargs)     The diff options from `diff-options` or `TIG_DIFF_OPTS`
#   %(prompt)       Prompt for the argument value.

# Custom key bindings
bind main    G     move-last-line
bind main    g     move-first-line
bind main    A     :set main-options = -n 1000 --all
bind main    a     :set main-options = -n 1000
bind generic G     move-last-line
bind generic gg    move-first-line
bind generic <F2>  !git checkout %(prompt)
bind generic <F3>  ?git checkout %(ref)
bind generic <F4>  ?git merge %(branch)
bind generic <F6>  !git commit
bind generic <F7>  !git pull
bind generic <F8>  !git push -u origin %(branch)
bind generic <F9>  !git fetch
bind generic <F12> !git commit --amend
bind grep    g     move-first-line

# Default key bindings
bind main   C ?git cherry-pick %(commit)
bind main   ! ?git revert %(commit)
bind status C !git commit
bind stash  A ?git stash apply %(stash)
bind stash  P ?git stash pop %(stash)
bind stash  ! ?git stash drop %(stash)
bind stash  g move-first-line
bind refs   g move-first-line
bind refs   C ?git checkout %(branch)
bind refs   ! ?git branch -D %(branch)

# Normal commands
# ---------------

# View switching
bind generic b view-blob
bind generic B view-blame
bind generic c view-stage
bind generic d view-diff
bind generic f view-grep
bind generic h view-help
bind generic l view-log
bind generic m view-main
bind generic p view-pager
bind generic r view-refs
bind generic s view-status
bind generic S view-status
bind generic t view-tree
bind generic y view-stash

# View manipulation
bind generic <Enter> enter      # enter and open selected entry
bind generic <Lt>    back       # go back to the previous view state
bind generic <Down>  next       # move to next
bind generic <C-N>   next       # use ctrl+n to move down a line
bind generic J       next       # use j to move down a line
bind generic <Up>    previous   # move to previous
bind generic <C-P>   previous   # use ctrl+p to move up a line
bind generic K       previous   # use k to move up a line
bind generic ,       parent     # move to parent
bind generic <Tab>   view-next  # move focus to the next view
bind generic R       refresh    # reload and refresh view
bind generic <F5>    refresh    # reload and refresh view
bind generic O       maximize   # maximize the current view
bind generic q       view-close # close the current view
bind generic Q       quit       # close all views and quit
bind generic <C-C>   quit       # close all views and quit

# View-specific key bindings
bind main   <C-G> :toggle commit-title-graph # toggle revision graph visualization
bind main   <C-F> :toggle commit-title-refs  # toggle reference display (tags/branches)
bind status u     status-update              # stage/unstage changes in file
bind status !     status-revert              # revert changes in file
bind status M     status-merge               # open git-mergetool(1)
bind status g     move-first-line
bind stage  u     status-update              # stage/unstage current diff (c)hunk
bind stage  1     stage-update-line          # stage/unstage current line
bind stage  !     status-revert              # revert current diff (c)hunk
bind stage  \     stage-split-chunk          # split current diff (c)hunk
bind stage  @     :/^@@                      # jump to next (c)hunk
bind stage  [     :toggle diff-context -1    # decrease the diff context
bind stage  ]     :toggle diff-context +1    # increase the diff context
bind stage  g     move-first-line
bind diff   @     :/^@@                      # jump to next (c)hunk
bind diff   [     :toggle diff-context -1    # decrease lines surrounding diff chunk by 1
bind diff   ]     :toggle diff-context +1    # increase lines surrounding diff chunk by 1
bind diff   g     move-first-line
bind tree   x     ?rm %(file)                # delete file in tree

# Cursor navigation key bindings
bind generic j        move-down
bind generic k        move-up
bind generic <C-D>    move-half-page-down
bind generic <C-U>    move-half-page-up
bind generic <PgDown> move-page-down
bind generic <Space>  move-page-down
bind generic <PgUp>   move-page-up
bind generic -        move-page-up
bind generic <Home>   move-first-line
bind generic <End>    move-last-line

# Scrolling key bindings
bind generic |       scroll-first-col
bind generic <Left>  scroll-left
bind generic <Right> scroll-right
bind generic <Ins>   scroll-line-up
bind generic <C-Y>   scroll-line-up
bind generic <Del>   scroll-line-down
bind generic <C-E>   scroll-line-down
bind generic <SBack> scroll-page-up
bind generic <SFwd>  scroll-page-down

# Searching key bindings
bind generic /      search
bind generic ?      search-back
bind generic n      find-next
bind generic N      find-prev
bind search  g      move-first-line
bind search  <Down> find-next
bind search  <C-N>  find-next
bind search  <C-J>  find-next
bind search  <Up>   find-prev
bind search  <C-P>  find-prev
bind search  <C-K>  find-prev
bind search  <C-C>  view-close

# Option manipulation key bindings (toggles)
bind generic o      options                       # open the options menu
bind generic e      edit                          # open in editor
bind generic :      prompt                        # open the prompt
bind generic <C-L>  screen-redraw                 # redraw the screen
bind generic z      stop-loading                  # stop all loading views
bind generic v      show-version                  # show tig version
bind generic I      :toggle sort-order            # toggle ascending/descending sort order
bind generic i      :toggle sort-field            # toggle field to sort by
bind generic <Hash> :toggle line-number           # toggle line numbers
bind generic D      :toggle date                  # toggle date display
bind generic A      :toggle author                # toggle author display
bind generic ~      :toggle line-graphics         # toggle (line) graphics mode
bind generic F      :toggle file-name             # toggle file name display
bind generic W      :toggle ignore-space          # toggle ignoring whitespace in diffs
bind generic X      :toggle id                    # toggle commit id display
bind generic $      :toggle commit-title-overflow # toggle commit text highlighting beyond width
bind generic %      :toggle file-filter           # toggle commit file filter when viewing commit from blame mode

# Colors
# ------

# The colors in the UI can be customized. In addition to the colors used
# for the UI you can also define new colors to use in the pager, blob,
# diff, and stage views by placing the text to match for in quotes.
#
# Prefix the name of a view to set a color only for that view, e.g.
#
#   color grep.file blue default
#
# As an example, this setting will to color Signed-off-by lines with a
# yellow foreground color and use the default background color.
#
#   color "    Signed-off-by"   yellow  default
#
# Note the four leading spaces in the string to match. This is because
# Git automatically indents commit messages by four spaces.

color "---"                blue    default bold
color "diff --"            blue    default bold
color "--- "               blue    default bold
color "+++ "               blue    default bold
color "@@"                 magenta default
color "+"                  green   default
color " +"                 green   default
color "-"                  red     default
color " -"                 red     default
color "index "             blue    default bold
color "old file mode "     yellow  default
color "new file mode "     yellow  default
color "deleted file mode " yellow  default
color "copy from "         yellow  default
color "copy to "           yellow  default
color "rename from "       yellow  default
color "rename to "         yellow  default
color "similarity "        yellow  default
color "dissimilarity "     yellow  default
color "diff-tree "         blue    default bold
color "Author: "           magenta default
color "Commit: "           blue    default bold
color "Tagger: "           magenta default
color "Merge: "            cyan    default bold
color "Date: "             yellow  default
color "AuthorDate: "       cyan  default
color "CommitDate: "       cyan  default
color "TaggerDate: "       cyan  default
color "Refs: "             yellow  default bold standout
color "Reflog: "           red     default
color "Reflog message: "   yellow  default
color "stash@{"            magenta default
color "commit "            blue    default bold
color "parent "            blue    default bold
color "tree "              blue    default bold
color "author "            magenta default bold
color "committer "         magenta default
color "    Signed-off-by"  yellow  default
color "    Acked-by"       yellow  default
color "    Tested-by"      yellow  default
color "    Reviewed-by"    yellow  default

color default            white   default bold
color cursor             white   black   bold standout
color status             green   default
color delimiter          magenta default
color date               cyan    default bold
color mode               cyan    default
color id                 blue    default bold
color overflow           red     default
color header             yellow  default
color section            cyan    default
color directory          yellow  default
color file               white   default bold
color grep.file          yellow  default bold standout
color file-size          white   default bold
color line-number        cyan    default
color title-blur         white   blue
color title-focus        blue    white   bold standout
color main-commit        green   default bold
color main-tag           yellow  default bold
color main-local-tag     yellow  default
color main-remote        yellow  default bold standout
color main-replace       cyan    default
color main-tracked       yellow  default bold
color main-ref           yellow  default bold standout
color main-head          red     default bold standout
color stat-none          default default
color stat-staged        magenta default
color stat-unstaged      magenta default
color stat-untracked     magenta default
color help-group         blue    default bold
color help-action        yellow  default
color diff-stat          black   default bold
color diff-add-highlight green   default standout
color diff-del-highlight red     default standout
color palette-0          magenta default
color palette-1          yellow  default
color palette-2          cyan    default
color palette-3          green   default
color palette-4          default default
color palette-5          white   default
color palette-6          red     default
color palette-7          magenta default bold
color palette-8          yellow  default bold
color palette-9          cyan    default bold
color palette-10         green   default bold
color palette-11         default default bold
color palette-12         white   default bold
color palette-13         red     default bold
color graph-commit       green   default bold
color search-result      yellow  black   bold standout

# Mappings for colors read from git configuration.
# Set to "no" to disable.
set git-colors = \
    branch.current=main-head \
    branch.local=main-ref \
    branch.plain=main-ref \
    branch.remote=main-remote \
    \
    diff.meta=diff-header \
    diff.meta=diff-index \
    diff.meta=diff-oldmode \
    diff.meta=diff-newmode \
    diff.frag=diff-chunk \
    diff.old=diff-del \
    diff.new=diff-add \
    \
    diff-highlight.oldHighlight=diff-del-highlight \
    diff-highlight.newHighlight=diff-add-highlight \
    \
    grep.filename=grep.file \
    grep.linenumber=grep.line-number \
    grep.separator=grep.delimiter \
    \
    status.branch=status.header \
    status.added=stat-staged \
    status.updated=stat-staged \
    status.changed=stat-unstaged \
    status.untracked=stat-untracked
