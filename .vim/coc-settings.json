{
    "diagnostic.enableMessage": "always",
    "diagnostic.errorSign": "E",
    "diagnostic.warningSign": "W",
    "diagnostic.infoSign": "I",
    "diagnostic.hintSign": "H",

    "suggest.acceptSuggestionOnCommitCharacter": true,
    "suggest.triggerAfterInsertEnter": true,
    "suggest.maxCompleteItemCount": 25,
    "suggest.autoTrigger": "always",
    "suggest.minTriggerInputLength": 3,
    "suggest.timeout": 500,

    "python.linting.pylintArgs": [
        "--disable=all",
        "--enable=classes,imports,variables,refactoring",
        "--disable=missing-docstring,invalid-name,redefined-builtin,invalid-slice-index,too-many-nested-blocks,redefined-outer-name,unused-import"
    ],

    "clangd.path": "/usr/local/opt/llvm/bin/clangd",
    "clangd.enabled": true,
    "clangd.arguments": [
        "--background-index",
        "--clang-tidy",
        "--pretty",
        "--limit-results=50",
        "-j=28"
    ],

    "languageserver": {

        "golang": {
            "command": "gopls",
            "rootPatterns": [".git/", "go.mod", ".vim"],
            "filetypes": ["go"],
            "disableWorkspaceFolders": true,
            "initializationOptions": {
                "usePlaceholders": true,
                "completeUnimported": true
            }
        },

        "julia": {
            "command": "julia",
            "args" : [
                "-e",
                "using LanguageServer, Pkg, StaticLint; import SymbolServer; env_path=dirname(Pkg.Types.Context().env.project_file); debug=false; server=LanguageServer.LanguageServerInstance(stdin,stdout,debug,env_path,\"\"); server.runlinter=true; run(server);"
            ],
            "filetypes": ["julia"]
        }

    }
}
